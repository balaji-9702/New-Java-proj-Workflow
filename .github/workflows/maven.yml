# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java Build CI 

on:
  workflow_run:
    workflows: ["Java CI with Maven"]
    types:
      - success
      - completed
   
jobs:
  build:

    runs-on: ubuntu-latest

    steps:   
    
    - uses: actions/checkout@v3
      name: Checkout_Code
      #with:
        #ssh-key: ${{ secrets.COMMIT_KEY }}
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
       mvn -B package --file New-Java-proj-Workflow/onlinebookstore-J2EE/pom.xml
      # bash ls -ltr


    - name: Start SonarQube Container
      run: |
          docker run -d --name sonarqube -p 9000:9000 -p 9092:9092 sonarqube
          sleep 30
          

    - name: Download and Set Up SonarScanner
      run: |
          echo 'export SONAR_VERSION="4.6.2.2472-linux"' >> $GITHUB_ENV
          echo 'export SONAR_CLI="sonar-scanner-cli-${SONAR_VERSION}"' >> $GITHUB_ENV
          echo 'export SONAR_FOLDER="sonar-scanner-${SONAR_VERSION}"' >> $GITHUB_ENV
          source $GITHUB_ENV
          curl "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/${SONAR_CLI}.zip" -o "${SONAR_CLI}.zip"
          unzip "${SONAR_CLI}.zip"
          pwd
          chmod u+x "${SONAR_FOLDER}/bin/sonar-scanner"
          echo "PATH=\"${PATH}:${PWD}/${SONAR_FOLDER}/bin\"" >> $GITHUB_ENV
          source $GITHUB_ENV
     #     rm -rf sonar-scanner-4.6.2.2472-linux/conf/sonar-scanner.properties
     #     cp $GITHUB_WORKSPACE/sonar-scanner.properties sonar-scanner-4.6.2.2472-linux/conf/sonar-scanner.properties
     #     echo 'Running scanner for the first time'
          
   

    - name: SonarQube Scan
      run: |
          mvn --file New-Java-proj-Workflow/onlinebookstore-J2EE/pom.xml sonar:sonar \
            -Dsonar.projectKey=New-Java-Proj \
            -Dsonar.login=admin \
            -Dsonar.password=admin1 \
            -Dsonar.host.url=http://localhost:9000
      env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}


  

    - name: Make dir
      run: |
       mkdir New-Java-proj-Workflow/my-artifact
       cd New-Java-proj-Workflow/
       ls -lrt
      # bash ls -ltr  
      
    - name: Zip output
      uses: vimtor/action-zip@v1.1
      with:
        #args: zip -qq -r artifact.zip   -d New-Java-proj-Workflow/onlinebookstore-J2EE/target/*.war 
        files:  New-Java-proj-Workflow/onlinebookstore-J2EE/target/onlinebookstore-0.0.1-SNAPSHOT.war 
        dest:   New-Java-proj-Workflow/onlinebookstore-J2EE/artifact.zip

  

    - name: Ensure Presence of zip file
      run:  |
         cd ./
         cd New-Java-proj-Workflow/onlinebookstore-J2EE/
         ls -lrt   

   # - uses: vimtor/action-zip@v1.1
   #   with:
   #       files:  /home/runner/work/New-Java-proj-Workflow/New-Java-proj-Workflow/New-Java-proj-Workflow/onlinebookstore-J2EE/target/*.war 
   #       dest:   artifact.zip
   # - name: Ensure Presence of zip file
   #   run:  |
   #     bash cd /home/runner/work/New-Java-proj-Workflow/New-Java-proj-Workflow/New-Java-proj-Workflow/onlinebookstore-J2EE/target
   #     bash ls -lrt
     
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      with:
       tag_name: "${{ github.run_id }}"
       release_name: "${{ github.run_id }}"
       draft: false
       prerelease: false

    - name: Debug Info
      run: | 
          echo "Upload URL: ${{ steps.create_release.outputs.upload_url }}"
          ls -al New-Java-proj-Workflow/onlinebookstore-J2EE/artifact.zip  
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   
          
    - name: Upload Release 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: New-Java-proj-Workflow/onlinebookstore-J2EE/artifact.zip
        asset_name: artifact.zip
        asset_content_type: application/zip
  
    

 
  

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
